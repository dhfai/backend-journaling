{
	"info": {
		"name": "Backend Journaling Auth API",
		"description": "Complete authentication API collection with all endpoints for user registration, login, password reset, and profile management.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"version": "1.0.0"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "test_email",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "test_password",
			"value": "SecurePassword123!",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": ["{{base_url}}"],
					"path": ["health"]
				},
				"description": "Check if the server is running and healthy."
			},
			"response": []
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    console.log('Registration successful - Check email for OTP');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"username\": \"testuser\",\n  \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": ["{{base_url}}"],
							"path": ["auth", "register"]
						},
						"description": "Register a new user account. An OTP will be sent to the provided email address for verification."
					},
					"response": []
				},
				{
					"name": "Verify OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.access_token) {",
									"        pm.collectionVariables.set('access_token', jsonData.data.access_token);",
									"        pm.collectionVariables.set('refresh_token', jsonData.data.refresh_token);",
									"        console.log('Tokens saved to collection variables');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otp\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/verify-otp",
							"host": ["{{base_url}}"],
							"path": ["auth", "verify-otp"]
						},
						"description": "Verify the OTP sent to email during registration. Returns access and refresh tokens."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.access_token) {",
									"        pm.collectionVariables.set('access_token', jsonData.data.access_token);",
									"        pm.collectionVariables.set('refresh_token', jsonData.data.refresh_token);",
									"        console.log('Tokens saved to collection variables');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": ["{{base_url}}"],
							"path": ["auth", "login"]
						},
						"description": "Authenticate user with email and password. Returns access and refresh tokens."
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.access_token) {",
									"        pm.collectionVariables.set('access_token', jsonData.data.access_token);",
									"        pm.collectionVariables.set('refresh_token', jsonData.data.refresh_token);",
									"        console.log('New tokens saved to collection variables');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": ["{{base_url}}"],
							"path": ["auth", "refresh"]
						},
						"description": "Get a new access token using a valid refresh token. Old refresh token will be revoked and replaced."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": ["{{base_url}}"],
							"path": ["auth", "logout"]
						},
						"description": "Logout user and revoke the refresh token."
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password",
							"host": ["{{base_url}}"],
							"path": ["auth", "forgot-password"]
						},
						"description": "Request a password reset OTP. OTP will be sent to the email if account exists."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"otp\": \"123456\",\n  \"new_password\": \"NewSecurePassword456!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/reset-password",
							"host": ["{{base_url}}"],
							"path": ["auth", "reset-password"]
						},
						"description": "Reset password using OTP received from forgot-password endpoint."
					},
					"response": []
				},
				{
					"name": "Request OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_email}}\",\n  \"purpose\": \"register\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/request-otp",
							"host": ["{{base_url}}"],
							"path": ["auth", "request-otp"]
						},
						"description": "Request a new OTP. Purpose can be 'register' or 'reset_password'. Rate-limited to prevent abuse."
					},
					"response": []
				}
			],
			"description": "All authentication-related endpoints including registration, login, password management, and token operations."
		},
		{
			"name": "Profile",
			"item": [
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/profile",
							"host": ["{{base_url}}"],
							"path": ["profile"]
						},
						"description": "Get the authenticated user's complete profile information including personal details. Requires valid access token."
					},
					"response": []
				},
				{
					"name": "Create Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"full_name\": \"John Doe\",\n  \"bio\": \"Software developer passionate about journaling\",\n  \"date_of_birth\": \"1990-01-15\",\n  \"phone_number\": \"+1234567890\",\n  \"address\": \"123 Main Street\",\n  \"city\": \"New York\",\n  \"country\": \"USA\",\n  \"timezone\": \"America/New_York\",\n  \"language\": \"en\",\n  \"avatar_url\": \"https://example.com/avatar.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/profile",
							"host": ["{{base_url}}"],
							"path": ["profile"]
						},
						"description": "Create a new profile for the authenticated user. All fields are optional except the ones you want to set initially."
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"full_name\": \"Jane Doe\",\n  \"bio\": \"Updated bio about my journaling journey\",\n  \"phone_number\": \"+1987654321\",\n  \"city\": \"Los Angeles\",\n  \"timezone\": \"America/Los_Angeles\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/profile",
							"host": ["{{base_url}}"],
							"path": ["profile"]
						},
						"description": "Update the authenticated user's profile. Only send the fields you want to update. All fields are optional."
					},
					"response": []
				},
				{
					"name": "Update Avatar",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"avatar_url\": \"https://example.com/new-avatar.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/profile/avatar",
							"host": ["{{base_url}}"],
							"path": ["profile", "avatar"]
						},
						"description": "Update user's avatar URL. Provide the URL of the uploaded avatar image."
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"old_password\": \"{{test_password}}\",\n  \"new_password\": \"NewSecurePassword789!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/profile/change-password",
							"host": ["{{base_url}}"],
							"path": ["profile", "change-password"]
						},
						"description": "Change the authenticated user's password. Requires current password for verification. All refresh tokens will be revoked for security."
					},
					"response": []
				}
			],
			"description": "Profile management endpoints for authenticated users. Includes personal information, avatar, and password management."
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/:id",
							"host": ["{{base_url}}"],
							"path": ["users", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "User UUID"
								}
							]
						},
						"description": "Get any user's profile by ID. Requires admin role. Replace :id with actual user UUID."
					},
					"response": []
				}
			],
			"description": "Admin-only endpoints requiring admin role in addition to authentication."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
